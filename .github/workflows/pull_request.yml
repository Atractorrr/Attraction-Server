name: dev pull request

on:
  pull_request:
    types: [opened, edited, synchronize]
    branches:
      - dev

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: PR 정보 가져오기
        id: get_pr_info
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 커밋메시지에서 prefix 추출하기
        id: extract_prefix
        run: |
          prefix=$(git log --format=%s ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -o '\[\w*-[0-9]*\]' | head -n 1)
          echo "::set-output name=prefix::${prefix}"

      - name: Update PR title
        if: steps.extract_prefix.outputs.prefix
        run: |
          new_title="${{ steps.extract_prefix.outputs.prefix }} ${{ github.event.pull_request.title }}"
          echo "New PR title: ${new_title}"
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
            -d "{\"title\": \"${new_title}\"}"

      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK v21 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: application.yml 파일 만들기
        run: echo '${{ secrets.APPLICATION_PROPERTIES }}' > ./src/main/resources/application.yml

      - name: credentials.json 파일 만들기
        run: echo '${{ secrets.CREDENTIAL_JSON }}' > ./src/main/resources/credentials.json

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build